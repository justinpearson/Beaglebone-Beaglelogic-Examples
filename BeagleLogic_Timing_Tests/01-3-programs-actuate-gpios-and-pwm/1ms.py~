import time

import Adafruit_BBIO.PWM as PWM
MY_PWM_PIN = 'P8_34'

import Adafruit_BBIO.GPIO as GPIO
MY_PWM_DIR_PIN_1 = 'P8_45'
MY_PWM_DIR_PIN_2 = 'P8_46'
MY_PWM_STBY = 'P8_44'

GPIO.setup( MY_PWM_DIR_PIN_1, GPIO.OUT)
GPIO.output(MY_PWM_DIR_PIN_1, GPIO.LOW)                         

GPIO.setup( MY_PWM_DIR_PIN_2, GPIO.OUT)
GPIO.output(MY_PWM_DIR_PIN_2, GPIO.LOW)                         

GPIO.setup( MY_PWM_STBY, GPIO.OUT)
GPIO.output(MY_PWM_STBY, GPIO.LOW) # stby low = off


# start PWM
PWM.start(MY_PWM_PIN,0,50000) # duty cycle 0%, freq 1000HZ.
GPIO.output(MY_PWM_STBY, GPIO.HIGH)


def shutdown():
    print("Shutting down PWM...")
    PWM.stop( MY_PWM_PIN )

    
    print('stopping motor...')
    GPIO.output(MY_PWM_STBY, GPIO.LOW)
    GPIO.output(MY_PWM_DIR_PIN_1, GPIO.LOW)         
    GPIO.output(MY_PWM_DIR_PIN_2, GPIO.LOW)

    print('cleaning up GPIOs...')
    GPIO.cleanup()
    
    print('cleaning up PWM...')
    PWM.cleanup()


def main():
    for i in range(5):
        print("i="+i)

        if i % 2 == 0:
            # motor counter-clockwise -> arm cw
            GPIO.output(MY_PWM_DIR_PIN_1, GPIO.LOW)         
            GPIO.output(MY_PWM_DIR_PIN_2, GPIO.HIGH)                        
            duty = 30
        else:
            # motor clockwise -> arm cw
            GPIO.output(MY_PWM_DIR_PIN_1, GPIO.HIGH)        
            GPIO.output(MY_PWM_DIR_PIN_2, GPIO.LOW)                         
            duty = 70

        PWM.set_duty_cycle(MY_PWM_PIN,duty)

        time.sleep(1)
        


if __name__ == '__main__':
#        pdb.set_trace()
    try:
    	raw_input('ENTER to start!')
        main()          

    except Exception as e:
        print("Exception:")
        print(e)
    	traceback.print_exc()

    finally:
        shutdown()
